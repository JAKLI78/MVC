@model MVCTask.Models.UserModel



@{
    Layout = null;
}

<!DOCTYPE html>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet"/>
<link href="~/Content/bootstrap.min.css" rel="stylesheet"/>
<script src="~/Scripts/jquery-1.12.4.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script type="text/javascript">
    $(function() {
        $('.date-picker').datepicker();
    })
</script>
<script language="javascript">
    function SomeClick() {
        var count = $('.title_box').length;
        $('#SomeTitle').append('<li class="title_box"> Title: <input type="text" name="Title[' +
            count +
            ']"  value=""/> <input type="button" value="Remove" id="SomeRemove" onclick="RemoveTitelInput(' +
            count +
            ');"/>  </li>');
    };

    function RemoveTitelInput(some) {
        console.log(some);
        $('.title_box:eq(' + some + ')').remove();
    };
</script>
<html>

<head>
    <title>@ViewBag.Title</title>
</head>
<body>
<div>
    <ul>
        <li>@ViewBag.Title</li>
    </ul>
    <div>@Html.ValidationSummary(true, "", new {@class = "text-danger"})</div>
    <div>
        @using (Html.BeginForm("CreateUser", "NewUser", FormMethod.Post, new {enctype = "multipart/form-data"}))
        {
            <div>@Html.EditorFor(m => m.Id)</div>
            <div>@Html.EditorFor(m => m.StrImage)</div>
            <div>Email: @Html.EditorFor(m => m.Email) @Html.ValidationMessageFor(m => m.Email, "", new {@class = "text-danger"})</div>
            <div>Name:@Html.EditorFor(m => m.Name) @Html.ValidationMessageFor(m => m.Name, "", new {@class = "text-danger"})</div>
            <div>Surname:@Html.EditorFor(m => m.Surname) @Html.ValidationMessageFor(m => m.Surname, "", new {@class = "text-danger"})</div>
            <div>
                <ul id="SomeTitle">
                    <li class="title_box">
                        Title: <input type="text" name="Title[0]" value="@Model.Title.First()"/> <input type="button" value="Add" id="SomeAdd" onclick="SomeClick();"/>

                    </li>
                    @{
                        if (Model.Title.Count > 1)
                        {
                            for (var i = 1; i < Model.Title.Count; i++)
                            {
                                <li class="title_box"> Title: <input type="text" name="Title[@i]" value="@Model.Title.ElementAt(i)"/> <input type="button" value="Remove" id="SomeAdd" onclick="RemoveTitelInput(@i);"/> </li>
                            }
                        }
                    }
                </ul>
            </div>
            <div >BirthDate: @Html.EditorFor(m => m.BirthDate, new {htmlAttributes = new {@class = "date-picker"}}) @Html.ValidationMessageFor(m => m.BirthDate, "", new {@class = "text-danger"})</div>
            <div>

            </div>
            <div>Company: @Html.DropDownList("CompanyId", new SelectList(Model.CompanyModels, "Id", "CompanyName", Model.CompanyId)) @Html.ValidationMessageFor(m => m.CompanyId, "", new {@class = "text-danger"})</div>
            <div>
                <input type="file" name="file" id="file"/>
            </div>
            <div>
                <input type="submit" value="Create"/>
            </div>
        }
    </div>
    @Html.Partial("Log");
</div>
</body>
</html>